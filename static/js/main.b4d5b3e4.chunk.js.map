{"version":3,"sources":["assets/images/background/landing.jpg","components/Body/Body.js","components/MenuBar/MenuBar.js","App.js","reportWebVitals.js","index.js"],"names":["Body","props","Typography","variant","useStyles","makeStyles","theme","appBar","background","appBarWrapper","width","margin","appBarTitle","flexGrow","icon","color","fontSize","MenuBar","classes","AppBar","position","className","elevation","Toolbar","IconButton","root","minHeight","backgroundImage","Landing","backgroundSize","backgroundRepeat","App","CssBaseline","Grid","container","direction","item","xs","sm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,MAA0B,oC,QCY1BA,EARF,SAACC,GACV,OACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAApB,oK,yCC2BFC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,WAAY,QAEdC,cAAe,CACbC,MAAO,MACPC,OAAQ,UAEVC,YAAa,CACXC,SAAU,KAEZC,KAAM,CACJC,MAAO,OACPC,SAAU,YAsBCC,EAlBC,SAAChB,GACf,IAAMiB,EAAUd,IAEhB,OACE,8BACE,cAACe,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWH,EAAQX,OAAQe,UAAW,EAAhE,SACE,eAACC,EAAA,EAAD,CAASF,UAAWH,EAAQT,cAA5B,UACE,cAACP,EAAA,EAAD,CAAYC,QAAQ,KAAKkB,UAAWH,EAAQN,YAA5C,oBACA,cAACY,EAAA,EAAD,UACE,cAAC,IAAD,CAAUH,UAAWH,EAAQJ,iBChDnCV,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmB,KAAM,CACJC,UAAW,QACXC,gBAAgB,OAAD,OAASC,EAAT,KACfC,eAAgB,QAChBC,iBAAkB,iBA0BPC,EAtBH,WACV,IAAMb,EAAUd,IAEhB,OACE,sBAAKiB,UAAWH,EAAQO,KAAxB,UACE,cAACO,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAA1B,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,EAAD,MAEF,eAACJ,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAApB,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACtB,cAACL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,EAAD,MAEF,cAACL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,cCvBjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b4d5b3e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/landing.1b9dfaf8.jpg\";","import { Typography } from '@material-ui/core';\nimport React from 'react';\n\n\nconst Body = (props) => {\n    return (\n        <Typography variant=\"body1\">\n            Testing.... Testing.... yeah yeah Testing........ Testing.... Testing.... yeah yeah Testing........ Testing.... Testing.... yeah yeah Testing........\n        </Typography>\n    );\n};\n\nexport default Body;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SortIcon from '@material-ui/icons/Sort';\nimport { Typography } from '@material-ui/core';\n\n/*\n\n      <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n        <Toolbar>\n          <Grid container>\n            <Grid item xs={0} sm={1}/>\n            <Grid item xs={4} sm={2}>\n              <Typography variant=\"h3\" className={classes.title}>\n                Devin.\n              </Typography>\n            </Grid>\n            <Grid item xs={4} sm={4} />\n            <Grid item xs={4} sm={2}>\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon />\n              </IconButton>\n            </Grid>\n            <Grid item xs={0} sm={1}/>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n\n*/\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    background: 'none',\n  },\n  appBarWrapper: {\n    width: '90%',\n    margin: '0 auto',\n  },\n  appBarTitle: {\n    flexGrow: '1',\n  },\n  icon: {\n    color: '#fff',\n    fontSize: '2rem',\n  }\n}));\n\nconst MenuBar = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar position=\"static\" className={classes.appBar} elevation={0}>\n        <Toolbar className={classes.appBarWrapper}>\n          <Typography variant=\"h4\" className={classes.appBarTitle}>Devin.</Typography>\n          <IconButton>\n            <SortIcon className={classes.icon}/>\n          </IconButton>\n        </Toolbar>\n\n      </AppBar>\n    </div>\n  );\n};\n\nexport default MenuBar;\n","import React from 'react';\n\n//Material UI imports\nimport { CssBaseline, Grid} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Landing from './assets/images/background/landing.jpg';\n\n// custom component imports\nimport Body from './components/Body/Body';\nimport MenuBar from './components/MenuBar/MenuBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n    backgroundImage: `url(${Landing})`,\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\"\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline/>\n      <Grid container direction=\"column\">\n        <Grid item xs={12}>\n          <MenuBar></MenuBar>\n        </Grid>\n        <Grid item container>\n          <Grid item xs={1} sm={2}/>\n          <Grid item xs={10} sm={8}>\n            <Body></Body>\n          </Grid>\n          <Grid item xs={1} sm={2}/>\n        </Grid>\n      </Grid>\n    </div>\n  );\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}