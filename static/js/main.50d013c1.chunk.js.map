{"version":3,"sources":["components/MenuBar/MenuBar.js","assets/images/background/landing.jpg","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","background","appBarWrapper","width","margin","appBarTitle","flexGrow","icon","color","fontSize","MenuBar","props","classes","AppBar","position","className","elevation","Toolbar","IconButton","root","minHeight","backgroundImage","Landing","backgroundSize","backgroundRepeat","App","CssBaseline","Grid","container","direction","item","xs","sm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAgCMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,WAAY,QAEdC,cAAe,CACbC,MAAO,MACPC,OAAQ,UAEVC,YAAa,CACXC,SAAU,KAEZC,KAAM,CACJC,MAAO,OACPC,SAAU,YAsBCC,EAlBC,SAACC,GACf,IAAMC,EAAUf,IAEhB,OACE,8BACE,cAACgB,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWH,EAAQZ,OAAQgB,UAAW,EAAhE,SACE,eAACC,EAAA,EAAD,CAASF,UAAWH,EAAQV,cAA5B,UACE,oBAAIa,UAAWH,EAAQP,YAAvB,oBACA,cAACa,EAAA,EAAD,UACE,cAAC,IAAD,cC1DG,MAA0B,oCCMnCrB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoB,KAAM,CACJC,UAAW,QACXC,gBAAgB,OAAD,OAASC,EAAT,KACfC,eAAgB,QAChBC,iBAAkB,iBA6CPC,EAtBH,WACV,IAAMb,EAAUf,IAEhB,OACE,sBAAKkB,UAAWH,EAAQO,KAAxB,UACE,cAACO,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAA1B,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,EAAD,MAEF,eAACJ,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAApB,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACtB,cAACL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,6MAGA,cAACL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,cCrCjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.50d013c1.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SortIcon from '@material-ui/icons/Sort';\n\n/*\n\n      <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n        <Toolbar>\n          <Grid container>\n            <Grid item xs={0} sm={1}/>\n            <Grid item xs={4} sm={2}>\n              <Typography variant=\"h3\" className={classes.title}>\n                Devin.\n              </Typography>\n            </Grid>\n            <Grid item xs={4} sm={4} />\n            <Grid item xs={4} sm={2}>\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon />\n              </IconButton>\n            </Grid>\n            <Grid item xs={0} sm={1}/>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n\n*/\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    background: 'none',\n  },\n  appBarWrapper: {\n    width: '90%',\n    margin: '0 auto',\n  },\n  appBarTitle: {\n    flexGrow: '1',\n  },\n  icon: {\n    color: '#fff',\n    fontSize: '2rem',\n  }\n}));\n\nconst MenuBar = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar position=\"static\" className={classes.appBar} elevation={0}>\n        <Toolbar className={classes.appBarWrapper}>\n          <h1 className={classes.appBarTitle}>Devin.</h1>\n          <IconButton>\n            <SortIcon/>\n          </IconButton>\n        </Toolbar>\n\n      </AppBar>\n    </div>\n  );\n};\n\nexport default MenuBar;\n","export default __webpack_public_path__ + \"static/media/landing.1b9dfaf8.jpg\";","import React from 'react';\nimport { CssBaseline, Grid} from '@material-ui/core';\nimport MenuBar from './components/MenuBar/MenuBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Landing from './assets/images/background/landing.jpg';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n    backgroundImage: `url(${Landing})`,\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\"\n  },\n}));\n\n/*\n\n      <CssBaseline/>\n      <Grid container direction=\"column\">\n        <Grid item xs={12}>\n          <MenuBar></MenuBar>\n        </Grid>\n        <Grid item container>\n          <Grid item xs={0} sm={2}/>\n          <Grid item xs={12} sm={8}>\n            This is my content! This is my content!This is my content!This is my content!This is my content!This is my content!This is my content!This is my content!This is my content!This is my content!\n          </Grid>\n          <Grid item xs={0} sm={2}/>\n        </Grid>\n      </Grid>\n    </div>\n\n\n*/\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline/>\n      <Grid container direction=\"column\">\n        <Grid item xs={12}>\n          <MenuBar></MenuBar>\n        </Grid>\n        <Grid item container>\n          <Grid item xs={0} sm={2}/>\n          <Grid item xs={12} sm={8}>\n            This is my content! This is my content!This is my content!This is my content!This is my content!This is my content!This is my content!This is my content!This is my content!This is my content!\n          </Grid>\n          <Grid item xs={0} sm={2}/>\n        </Grid>\n      </Grid>\n    </div>\n  );\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}